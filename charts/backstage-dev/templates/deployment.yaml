
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backstage-deployment
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.backend.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.backend.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.backend.name }}
    spec:
      serviceAccountName: {{ .Values.backend.serviceAccountName }}
      containers:
        - name: {{ .Values.backend.name }}
          command: ["node"]
          args:
            - "packages/backend"
            - "--config"
            - "app-config.yaml"
          image: us-central1-docker.pkg.dev/px-mike-project-hje/backstage/backstage
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: {{ .Values.backend.name }}
              containerPort: {{ .Values.backend.containerPort }}
          env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: pg-db-secret
                key: username
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: pg-db-secret
                key: password
          - name: POSTGRES_HOST
            valueFrom:
              secretKeyRef:
                name: pg-db-secret
                key: database
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: pg-db-secret
                key: username
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: pg-db-secret
                key: password
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: pg-db-secret
                key: database

        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.28.0
          command:
            - "/cloud_sql_proxy"
            - "-ip_address_types=PRIVATE"
            - "-log_debug_stdout"
            - "-instances=px-mike-project-hje:us-central1:pg-database=tcp:5432"
          securityContext:
            runAsNonRoot: true
          resources:
            requests:
              memory: "2Gi"
              cpu: "1"

