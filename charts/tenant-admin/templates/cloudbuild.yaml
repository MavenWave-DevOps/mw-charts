apiVersion: cloudbuild.cnrm.cloud.google.com/v1beta1
kind: CloudBuildTrigger
metadata:
  name: {{ .Values.lifecycle -}}-ci
  annotations:
    cnrm.cloud.google.com/project-id: {{ include "app_project" . }}
spec:
  disabled: false
  github:
    owner: {{ required "REQUIRED: github_org" .Values.github_org }}
    name: anthos-{{ required "REQUIRED: tenant_code" .Values.tenant_code }} 
    push:
      branch: {{ include "branch" . }}
  includedFiles:
    - "nginx/**"
    - "api/**"
  substitutions:
    "_LIFECYCLE": {{ .Values.lifecycle }}
  build:
    timeout: 1200s
    step:
      - id: "Build-API"
        name: gcr.io/kaniko-project/executor:latest
        args:
          - --destination={{- .Values.google.region -}}-docker.pkg.dev/$PROJECT_ID/{{- include "artifact_repo" . -}}/api:$COMMIT_SHA
          - --destination={{- .Values.google.region -}}-docker.pkg.dev/$PROJECT_ID/{{- include "artifact_repo" . -}}/api:latest
          - --context=./api
          - --cache=true
          - --cache-ttl=240h

      - id: "Build-Nginx"
        name: gcr.io/kaniko-project/executor:latest
        args:
          - --destination={{- .Values.google.region -}}-docker.pkg.dev/$PROJECT_ID/{{- include "artifact_repo" . -}}/nginx:$COMMIT_SHA
          - --destination={{- .Values.google.region -}}-docker.pkg.dev/$PROJECT_ID/{{- include "artifact_repo" . -}}/nginx:latest
          - --context=./nginx
          - --cache=true
          - --cache-ttl=240h

      # - id: "Image-Update"
      #   name: gcr.io/walker-cpl/tenant-yq
      #   args:
      #     - "-c"
      #     - |
      #       mkdir -p /root/.ssh
      #       echo "$$SSH_KEY" >> /root/.ssh/id_rsa
      #       chmod 400 /root/.ssh/id_rsa
      #       cp known_hosts.github /root/.ssh/known_hosts
      #
      #       git config --global user.email "walker.obrien@mavenwave.com"
      #       git config --global user.name "Walker O'Brien"
      #       git config --global pull.ff only
      #
      #       git clone git@github.com:MavenWave-DevOps/anthos-helm.git
      #       cd anthos-helm
      #       git checkout $BRANCH_NAME
      #       git fetch
      #       git pull
      #
      #       source /usr/bin/update_image.sh ${_LIFECYCLE} ${_APP_CODE} api $COMMIT_SHA
      #       source /usr/bin/update_image.sh ${_LIFECYCLE} ${_APP_CODE} nginx $COMMIT_SHA
      #
      #       git add -A
      #       git commit -m "Image update: $COMMIT_SHA"
      #       git push
      #
      #       cd ../
      #   secretEnv:
      #     - "SSH_KEY"



